title: Training pipeline for dansk-gold-multi and ontonotes NER
description: >
  Training pipeline for dansk-gold-multi and ontonotes NER
vars:
  lang: "da"
  config_trf: "transformer"
  model_name_trf: "gold_multi_ontonotes_trf"
  training_corpus: "joint"
  gpu: 0
  spacy_version: ">=3.4.0"

directories: ["assets", "corpus", "training", "scripts", "metrics"]

# workflows:
#   preprocess:
#     - install

commands:
  # Installation
  - name: install
    help: "Creating environments and installing dependencies"
    script:
      - "bash scripts/create_environments.sh"
    deps:
      - "requirements_preprocessing.txt"
      - "requirements_training.txt"
      - "requirements_packaging.txt"

  # Fetching assets
  - name: fetch_assets
    help: Fetches treebanks, pretraining corpus and named entity assets.
    script:
      - "bash scripts/fetch/fetch_treebanks.sh"
      - "bash scripts/clean/clean_treebanks.sh"
      - "bash scripts/fetch/fetch_pretraining.sh"
      - "bash scripts/clean/clean_pretraining.sh"
      - "bash scripts/fetch/fetch_named_entities.sh"
      - "bash scripts/clean/clean_named_entities.sh"
      - "bash scripts/fetch/fetch_lemma_lookup.sh"

    # donwload models we've already trained
  - name: get_model_checkpoints
    help: Downloads pretrained HomerCy models from huggingface hub
    script:
      - "bash scripts/get_model_checkpoints.sh"

  # Preprocessing assets for training
  - name: prepare
    help: "Prepares assets for training"
    script:
      - "bash scripts/prepare.sh"

  # Training scripts
  - name: train_sm
    help: "Trains a sm model over the dataset"
    script:
      - "bash scripts/train.sh ${vars.config_sm} ${vars.model_name_sm} ${vars.training_corpus} cpu"

  - name: train_trf
    help: "Finetunes the Bert based transformer model on the treebanks"
    script:
      - "bash scripts/train.sh ${vars.config_trf} ${vars.model_name_trf} ${vars.training_corpus} gpu"

  # Evaluation scripts 
  - name: evaluate_sm
    help: "Evaluate the sm model on test data & save the metrics"
    script:
      - "bash scripts/evaluate/evaluate_trained.sh ${vars.model_name_sm} ${vars.package_version}"

  - name: evaluate_trf
    help: "Evaluate the Bert based transformer model on test data & save the metrics"
    script:
      - "bash scripts/evaluate/evaluate_trained.sh ${vars.model_name_trf} ${vars.package_version}"

  - name: evaluate_hub
    help: "Evaluate all HomerCy models that are on the Huggingface Hub"
    script:
      - "bash scripts/evaluate_homercy_checkpoints.sh ${vars.model_name_sm} ${vars.package_version}"
      - "bash scripts/evaluate_homercy_checkpoints.sh ${vars.model_name_trf} ${vars.package_version}"

  - name: evaluate_jacobo
    help: "Evaluate grc spacy models by others"
    script:
      - "bash scripts/evaluate/evaluate_jacobo.sh"

  # Packaging and pushing to online repositories
  - name: package_sm
    help: "Builds the small package locally"
    script:
      - "bash scripts/package.sh ${vars.model_name_sm} ${vars.package_name_sm}"

  - name: package_trf
    help: "Builds the transformer package locally"
    script:
      - "bash scripts/package.sh ${vars.model_name_sm} ${vars.package_name_sm}"

  - name: push_sm
    help: "Builds and pushes small package to HuggingFace"
    script:
    - "bash scripts/push.sh ${vars.model_name_sm} ${vars.package_name_sm} ${vars.package_version} ${vars.lang}"

  - name: push_trf
    help: "Builds and pushes transformer package to HuggingFace"
    script:
    - "bash scripts/push.sh ${vars.model_name_trf} ${vars.package_name_trf} ${vars.package_version} ${vars.lang}"
